{"ast":null,"code":"var _jsxFileName = \"/Volumes/Works/projects/react/tutorials/react_graphql/client/src/components/BookDetails.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { getBookQuery } from '../queries/queries';\n\nfunction BookDetails({\n  bookId\n}) {\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(getBookQuery, {\n    variables: {\n      id: bookId\n    }\n  });\n  if (loading) return React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, \"Loading book detail...\");\n  if (error) return React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, \"Error in loading book detail...\");\n  console.log('detail', data);\n  return React.createElement(\"div\", {\n    id: \"book-details\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  });\n}\n\nexport default BookDetails;","map":{"version":3,"sources":["/Volumes/Works/projects/react/tutorials/react_graphql/client/src/components/BookDetails.js"],"names":["React","useState","useEffect","useQuery","getBookQuery","BookDetails","bookId","loading","error","data","variables","id","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,YAAT,QAA6B,oBAA7B;;AAEA,SAASC,WAAT,CAAqB;AAAEC,EAAAA;AAAF,CAArB,EAAiC;AAC/B,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BN,QAAQ,CAACC,YAAD,EAAe;AACtDM,IAAAA,SAAS,EAAE;AAAEC,MAAAA,EAAE,EAAEL;AAAN;AAD2C,GAAf,CAAzC;AAGA,MAAIC,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAP;AACb,MAAIC,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAAP;AAEXI,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBJ,IAAtB;AAEA,SACE;AAAK,IAAA,EAAE,EAAC,cAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAkBD;;AAED,eAAeJ,WAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { getBookQuery } from '../queries/queries';\n\nfunction BookDetails({ bookId }) {\n  const { loading, error, data } = useQuery(getBookQuery, {\n    variables: { id: bookId }\n  });\n  if (loading) return <p>Loading book detail...</p>;\n  if (error) return <p>Error in loading book detail...</p>;\n\n  console.log('detail', data);\n\n  return (\n    <div id='book-details'>\n      {/* {data && (\n        <div>\n          <h2>{data.book.name}</h2>\n          <p>{data.book.genre}</p>\n          <p>{data.author.name}</p>\n          <p>All books by this author:</p>\n          <ul className='other-books'>\n            {data.book.author.books.map(book => {\n              return <li key={book.id}>{book.name}</li>;\n            })}\n          </ul>\n        </div>\n      )}\n      {!data.book && <div>No book selected...</div>} */}\n    </div>\n  );\n}\n\nexport default BookDetails;\n"]},"metadata":{},"sourceType":"module"}