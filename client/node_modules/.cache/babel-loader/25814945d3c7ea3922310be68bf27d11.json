{"ast":null,"code":"var _jsxFileName = \"/Volumes/Works/projects/react/tutorials/react_graphql/client/src/components/AddBook.js\";\nimport React, { useState } from 'react';\nimport { useQuery, useMutation } from '@apollo/react-hooks';\nimport { getAuthorsQuery, addBookMutation } from '../queries/queries';\n\nfunction AddBook() {\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(getAuthorsQuery);\n  const [addBook, {\n    param\n  }] = useMutation(addBookMutation);\n  const [values, setValues] = useState({\n    name: '',\n    genre: '',\n    authorId: ''\n  });\n\n  const handleChange = e => {\n    setValues({ ...values,\n      [e.target.name]: e.target.value\n    });\n    console.log('222', values);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log('333', values);\n    addBook();\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    id: \"add-book\",\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"field\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Book name:\"), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    value: values.name,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"field\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"Genre:\"), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"genre\",\n    value: values.genre,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"field\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Author:\"), React.createElement(\"select\", {\n    name: \"authorId\",\n    value: values.authorId,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"Select Author\"), loading && React.createElement(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"Loading authors ...\"), error && React.createElement(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Error in loading authors...\"), data && data.authors.map(author => React.createElement(\"option\", {\n    key: author.id,\n    value: author.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, author.name)))), React.createElement(\"div\", {\n    className: \"field\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"+\"))));\n}\n\nexport default AddBook;","map":{"version":3,"sources":["/Volumes/Works/projects/react/tutorials/react_graphql/client/src/components/AddBook.js"],"names":["React","useState","useQuery","useMutation","getAuthorsQuery","addBookMutation","AddBook","loading","error","data","addBook","param","values","setValues","name","genre","authorId","handleChange","e","target","value","console","log","handleSubmit","preventDefault","authors","map","author","id"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useQuery, useMutation } from '@apollo/react-hooks';\nimport { getAuthorsQuery, addBookMutation } from '../queries/queries';\n\nfunction AddBook() {\n  const { loading, error, data } = useQuery(getAuthorsQuery);\n  const [addBook, { param }] = useMutation(addBookMutation);\n\n  const [values, setValues] = useState({\n    name: '',\n    genre: '',\n    authorId: ''\n  });\n\n  const handleChange = e => {\n    setValues({\n      ...values,\n      [e.target.name]: e.target.value\n    });\n    console.log('222', values);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log('333', values);\n    addBook();\n  };\n\n  return (\n    <div>\n      <form id='add-book' onSubmit={handleSubmit}>\n        <div className='field'>\n          <label>Book name:</label>\n          <input\n            type='text'\n            name='name'\n            value={values.name}\n            onChange={handleChange}\n          />\n        </div>\n        <div className='field'>\n          <label>Genre:</label>\n          <input\n            type='text'\n            name='genre'\n            value={values.genre}\n            onChange={handleChange}\n          />\n        </div>\n        <div className='field'>\n          <label>Author:</label>\n          <select\n            name='authorId'\n            value={values.authorId}\n            onChange={handleChange}\n          >\n            <option>Select Author</option>\n            {loading && <option>Loading authors ...</option>}\n            {error && <option>Error in loading authors...</option>}\n            {data &&\n              data.authors.map(author => (\n                <option key={author.id} value={author.id}>\n                  {author.name}\n                </option>\n              ))}\n          </select>\n        </div>\n        <div className='field'>\n          <button type='submit'>+</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default AddBook;\n"]},"metadata":{},"sourceType":"module"}